/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// MACROS FOR CASE DEFINITION FOR GRID CONSTRUCTIONS
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


// Units are in mm
   // Height (from tip nozzle to ground plate)
   // Lenght nozzle
   // Farfield / Plane size
   // Nozzle Inner Diameter
   // Nozzle Outer Diameter
   // Outlet Dimension
   // Outlet Dimension
   // Height (from tip nozzle to ground plate)
   // Height (from tip nozzle to ground plate)
 	// Apperture of refiment region
      	// (0 = do the symmetry plane) (1 = no symmetry plane)
  	// Refinement Level

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// General macros to create 2D/extruded-2D meshes
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
scale 0.001;
 

//
// CALCULATED VALUES
   // Far Radius
   // Inner Radius
   // Outer Radius


          // Typical cell size in mm!
            // Axisymm. wedge degrees

// CALCULATED VALUES









//

 

//
  




//




vertices
(
( 0	 1.00  0.1 ) //0
(0.35  1.00  0.1 ) //1
(0.35	 0  0.1 ) //2
(0.525	 0  0.1 ) //3
(0.525	 1.00  0.1 ) //4
(7	 1.00  0.1 ) //5
(7	 0  0.1 ) //6
(7	-10.00  0.1 ) //7
(0.525	-10.00  0.1 ) //8
(0.35	-10.00  0.1 ) //9
( 0	-10.00  0.1 ) //10
( 0	 0  0.1 ) //11
(0.35	 1.00 -0.1 ) //12
(0.35	 0 -0.1 ) //13
(0.525	 0 -0.1 ) //14
(0.525	 1.00 -0.1 ) //15
(7	 1.00 -0.1 ) //16
(7	 0 -0.1 ) //17
(7	-10.00 -0.1 ) //18
(0.525	-10.00 -0.1 ) //19
(0.35	-10.00 -0.1 ) //20
(0.175	 1.00  0.1 ) //21
(0.175	 1.00 -0.1 ) //22
(0.175	 0  0.1 ) //23
(0.175	 0 -0.1 ) //24
(0.175	-10.00  0.1 ) //25
(0.175	-10.00 -0.1 ) //26
( 0	 1.00 -0.1 ) //27
( 0	-10.00 -0.1 ) //28
( 0	 0 -0.1 ) //29
(7	-10.0875  0.1 ) //30
(0.525	-10.0875  0.1 ) //31
(0.35	-10.0875  0.1 ) //32
( 0	-10.0875  0.1 ) //33
(7	-10.0875  -0.1 ) //34
(0.525	-10.0875  -0.1 ) //35
(0.35	-10.0875  -0.1 ) //36
( 0	-10.0875  -0.1 ) //37
(7	-11.0875  0.1 ) //38
(0.525	-11.0875  0.1 ) //39
(0.35	-11.0875  0.1 ) //40
( 0	-11.0875  0.1 ) //41
(7	-11.0875  -0.1 ) //42
(0.525	-11.0875  -0.1 ) //43
(0.35	-11.0875  -0.1 ) //44
( 0	-11.0875  -0.1 ) //45

);


 
blocks
(

hex (27  12 1 0  29 13 2 11)		(4 1 10) simpleGrading 	(1   1  1) 	// 
hex (29 13 2 11 28 20 9 10) 		(4 1 100) simpleGrading 	(1   1  1) 	// 
hex (13 14 3 2  20 19 8 9) 			(2 1 100) simpleGrading 	(1 1  1) 	// 
hex (15 16 5 4  14 17 6 3) 			(65 1 10) simpleGrading 	(1 1  1) 	// 
hex (14 17 6 3  19 18 7 8) 			(65 1 100) simpleGrading 	(1 1  1) 	// 
hex (28 20 9 10 37 36 32 33) 		(4 1 1) simpleGrading 	(1   1  1) 	// Second block
hex (37 36 32 33 45 44 40 41) 		(4 1 10) simpleGrading 	(1   1  1) 	//
hex (36 35 31 32 44 43 39 40) 		(2 1 10) simpleGrading 	(1 1  1) 	// 
hex (35 34 30 31 43 42 38 39) 		(65 1 10) simpleGrading 	(1 1  1) 	// 

);
 
 
edges
(
);

boundary
(
 
     axis
     { 
           type patch;
           faces  
           (
               (0 27 29 11)
			   (11 29 28 10)
		(10 28 37 33)
		(33 37 45 41)

           );
      }
	  
	 wedge_pos
     { 
           type patch;
           faces  
           (
				(0 1 2 11)
				(11 2 9 10)
				(2 3 8 9)
				(4 5 6 3)
				(3 6 7 8)
				(10 9 32 33)
				(33 32 40 41)
				(32 31 39 40)
				(31 30 38 39)

           );
      }
     wedge_neg
     { 
           type patch;
           faces  
           (
			
				(27 12 13 29)
				(29 13 20 28)
				(13 14 19 20)
				(15 16 17 14)
				(14 17 18 19)
				(28 20 36 37)
				(37 36 44 45)
				(36 35 43 44)
				(35 34 42 43)

           );
      }
	  
     domainWall
     { 
           type patch;
           faces  
           (
               (5 16 17 6)
			   (6 17 18 7)

           );
      }

     domainWall.2
     { 
           type patch;
           faces  
           (
    		(34 30 38 42)

           );
      }


     floor
     { 
           type patch;
          faces  
           (
			   (20 19 8 9)
			   (19 18 7 8)
			   (20 9 32 36)
   			   (36 35 31 32)
			   (35 34 30 31)

          );
     }
     floor2
     { 
           type patch;
          faces  
           (
			   (44 43 39 40)
			   (43 42 38 39)

          );
     }

     inlet
     { 
           type patch;
           faces  
           (
               (27 12 1 0)

           );
      }
     topWall
     { 
           type patch;
           faces  
           (
               (15 16 5 4)

           );
      }
     electWall
     { 
           type patch;
           faces  
           (
               (1 12 13 2)
			   (2 13 14 3)
			   (4 15 14 3)

           );
      }
	 out
     { 
           type patch;
           faces  
           (
		
			//(28 20 9 10)
			(45 44 40 41)


           );
      }

);

mergePatchPairs
(
);